apiVersion: v1
kind: Secret
metadata:
  name: dev-database-credentials
  namespace: dev
data:
  DB_HOST: bXktcG9zdGdyZXNxbC1ydy5wb3N0Z3Jlcy5zdmMuY2x1c3Rlci5sb2NhbA==
  DB_NAME: dG9kb3M=
  DB_PASSWORD: cGFzc3dvcmQ=
  DB_PORT: NTQzMg==
  DB_USER: YW5pc2g=
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: dev-backend-service
  namespace: dev
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: dev-backend-deployment
  namespace: dev
  annotations:
    instrumentation.opentelemetry.io/inject-go: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      shareProcessNamespace: true
      containers:
        - name: autoinstrumentation-go
          image: otel/autoinstrumentation-go
          imagePullPolicy: IfNotPresent
          env:
            - name: OTEL_GO_AUTO_TARGET_EXE
              value: "/app/backend"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://otel-collector-collector.dev.svc.cluster.local:4318"
            - name: OTEL_SERVICE_NAME
              value: "dev-backend-service"
          securityContext:
            runAsUser: 0
            privileged: true
        - name: backend
          image: anish60/backend
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: dev-database-credentials
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
      initContainers:
        - name: wait-for-db
          image: postgres:15
          command:
            - sh
            - -c
            - |
              until pg_isready -h my-postgresql-rw.postgres.svc.cluster.local -p 5432; do
                echo "Waiting for PostgreSQL database to be ready..."
                sleep 5
              done
              echo "PostgreSQL database is up and running."
