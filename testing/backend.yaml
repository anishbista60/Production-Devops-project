apiVersion: v1
data:
  DB_HOST: bXktcG9zdGdyZXNxbC1ydy5wb3N0Z3Jlcy5zdmMuY2x1c3Rlci5sb2NhbA==
  DB_NAME: dG9kb3M=
  DB_PASSWORD: cGFzc3dvcmQ=
  DB_PORT: NTQzMg==
  DB_USER: YW5pc2g=
kind: Secret
metadata:
  creationTimestamp: null
  name: dev-database-credentials
  namespace: dev
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: dev-backend-service
  namespace: dev
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: dev-backend-deployment
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: dev-database-credentials
        image: anish60/backend
        name: backend
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
      initContainers:
      - command:
        - sh
        - -c
        - |
          until pg_isready -h my-postgresql-rw.postgres.svc.cluster.local -p 5432; do
            echo "Waiting for PostgreSQL database to be ready..."
            sleep 5
          done
          echo "PostgreSQL database is up and running."
        image: postgres:15
        name: wait-for-db
        securityContext:
          runAsUser: 999
      securityContext:
        runAsNonRoot: true
